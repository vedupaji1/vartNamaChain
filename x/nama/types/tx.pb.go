// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: nama/nama/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSetNewAdmin struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewAdmin string `protobuf:"bytes,2,opt,name=newAdmin,proto3" json:"newAdmin,omitempty"`
}

func (m *MsgSetNewAdmin) Reset()         { *m = MsgSetNewAdmin{} }
func (m *MsgSetNewAdmin) String() string { return proto.CompactTextString(m) }
func (*MsgSetNewAdmin) ProtoMessage()    {}
func (*MsgSetNewAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_223d5af7e7599f1c, []int{0}
}
func (m *MsgSetNewAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetNewAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetNewAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetNewAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetNewAdmin.Merge(m, src)
}
func (m *MsgSetNewAdmin) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetNewAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetNewAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetNewAdmin proto.InternalMessageInfo

func (m *MsgSetNewAdmin) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetNewAdmin) GetNewAdmin() string {
	if m != nil {
		return m.NewAdmin
	}
	return ""
}

type MsgSetNewAdminResponse struct {
}

func (m *MsgSetNewAdminResponse) Reset()         { *m = MsgSetNewAdminResponse{} }
func (m *MsgSetNewAdminResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetNewAdminResponse) ProtoMessage()    {}
func (*MsgSetNewAdminResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_223d5af7e7599f1c, []int{1}
}
func (m *MsgSetNewAdminResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetNewAdminResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetNewAdminResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetNewAdminResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetNewAdminResponse.Merge(m, src)
}
func (m *MsgSetNewAdminResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetNewAdminResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetNewAdminResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetNewAdminResponse proto.InternalMessageInfo

type MsgSetNamaServiceCost struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewCost uint64 `protobuf:"varint,2,opt,name=newCost,proto3" json:"newCost,omitempty"`
}

func (m *MsgSetNamaServiceCost) Reset()         { *m = MsgSetNamaServiceCost{} }
func (m *MsgSetNamaServiceCost) String() string { return proto.CompactTextString(m) }
func (*MsgSetNamaServiceCost) ProtoMessage()    {}
func (*MsgSetNamaServiceCost) Descriptor() ([]byte, []int) {
	return fileDescriptor_223d5af7e7599f1c, []int{2}
}
func (m *MsgSetNamaServiceCost) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetNamaServiceCost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetNamaServiceCost.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetNamaServiceCost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetNamaServiceCost.Merge(m, src)
}
func (m *MsgSetNamaServiceCost) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetNamaServiceCost) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetNamaServiceCost.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetNamaServiceCost proto.InternalMessageInfo

func (m *MsgSetNamaServiceCost) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetNamaServiceCost) GetNewCost() uint64 {
	if m != nil {
		return m.NewCost
	}
	return 0
}

type MsgSetNamaServiceCostResponse struct {
}

func (m *MsgSetNamaServiceCostResponse) Reset()         { *m = MsgSetNamaServiceCostResponse{} }
func (m *MsgSetNamaServiceCostResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetNamaServiceCostResponse) ProtoMessage()    {}
func (*MsgSetNamaServiceCostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_223d5af7e7599f1c, []int{3}
}
func (m *MsgSetNamaServiceCostResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetNamaServiceCostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetNamaServiceCostResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetNamaServiceCostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetNamaServiceCostResponse.Merge(m, src)
}
func (m *MsgSetNamaServiceCostResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetNamaServiceCostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetNamaServiceCostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetNamaServiceCostResponse proto.InternalMessageInfo

type MsgReserveNama struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Nama    string `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	Price   uint64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (m *MsgReserveNama) Reset()         { *m = MsgReserveNama{} }
func (m *MsgReserveNama) String() string { return proto.CompactTextString(m) }
func (*MsgReserveNama) ProtoMessage()    {}
func (*MsgReserveNama) Descriptor() ([]byte, []int) {
	return fileDescriptor_223d5af7e7599f1c, []int{4}
}
func (m *MsgReserveNama) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReserveNama) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReserveNama.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReserveNama) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReserveNama.Merge(m, src)
}
func (m *MsgReserveNama) XXX_Size() int {
	return m.Size()
}
func (m *MsgReserveNama) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReserveNama.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReserveNama proto.InternalMessageInfo

func (m *MsgReserveNama) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgReserveNama) GetNama() string {
	if m != nil {
		return m.Nama
	}
	return ""
}

func (m *MsgReserveNama) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type MsgReserveNamaResponse struct {
	NamaId uint64 `protobuf:"varint,1,opt,name=namaId,proto3" json:"namaId,omitempty"`
}

func (m *MsgReserveNamaResponse) Reset()         { *m = MsgReserveNamaResponse{} }
func (m *MsgReserveNamaResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReserveNamaResponse) ProtoMessage()    {}
func (*MsgReserveNamaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_223d5af7e7599f1c, []int{5}
}
func (m *MsgReserveNamaResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReserveNamaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReserveNamaResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReserveNamaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReserveNamaResponse.Merge(m, src)
}
func (m *MsgReserveNamaResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReserveNamaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReserveNamaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReserveNamaResponse proto.InternalMessageInfo

func (m *MsgReserveNamaResponse) GetNamaId() uint64 {
	if m != nil {
		return m.NamaId
	}
	return 0
}

type MsgAcquireNama struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NamaId  uint64 `protobuf:"varint,2,opt,name=namaId,proto3" json:"namaId,omitempty"`
	Price   uint64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (m *MsgAcquireNama) Reset()         { *m = MsgAcquireNama{} }
func (m *MsgAcquireNama) String() string { return proto.CompactTextString(m) }
func (*MsgAcquireNama) ProtoMessage()    {}
func (*MsgAcquireNama) Descriptor() ([]byte, []int) {
	return fileDescriptor_223d5af7e7599f1c, []int{6}
}
func (m *MsgAcquireNama) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcquireNama) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcquireNama.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcquireNama) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcquireNama.Merge(m, src)
}
func (m *MsgAcquireNama) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcquireNama) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcquireNama.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcquireNama proto.InternalMessageInfo

func (m *MsgAcquireNama) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAcquireNama) GetNamaId() uint64 {
	if m != nil {
		return m.NamaId
	}
	return 0
}

func (m *MsgAcquireNama) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type MsgAcquireNamaResponse struct {
}

func (m *MsgAcquireNamaResponse) Reset()         { *m = MsgAcquireNamaResponse{} }
func (m *MsgAcquireNamaResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAcquireNamaResponse) ProtoMessage()    {}
func (*MsgAcquireNamaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_223d5af7e7599f1c, []int{7}
}
func (m *MsgAcquireNamaResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcquireNamaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcquireNamaResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcquireNamaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcquireNamaResponse.Merge(m, src)
}
func (m *MsgAcquireNamaResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcquireNamaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcquireNamaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcquireNamaResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSetNewAdmin)(nil), "nama.nama.MsgSetNewAdmin")
	proto.RegisterType((*MsgSetNewAdminResponse)(nil), "nama.nama.MsgSetNewAdminResponse")
	proto.RegisterType((*MsgSetNamaServiceCost)(nil), "nama.nama.MsgSetNamaServiceCost")
	proto.RegisterType((*MsgSetNamaServiceCostResponse)(nil), "nama.nama.MsgSetNamaServiceCostResponse")
	proto.RegisterType((*MsgReserveNama)(nil), "nama.nama.MsgReserveNama")
	proto.RegisterType((*MsgReserveNamaResponse)(nil), "nama.nama.MsgReserveNamaResponse")
	proto.RegisterType((*MsgAcquireNama)(nil), "nama.nama.MsgAcquireNama")
	proto.RegisterType((*MsgAcquireNamaResponse)(nil), "nama.nama.MsgAcquireNamaResponse")
}

func init() { proto.RegisterFile("nama/nama/tx.proto", fileDescriptor_223d5af7e7599f1c) }

var fileDescriptor_223d5af7e7599f1c = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0xa5, 0x80, 0x20, 0x43, 0x62, 0xe2, 0x46, 0x49, 0x25, 0xb1, 0xe2, 0x9e, 0x48, 0x4c, 0xaa,
	0xd1, 0x2f, 0x40, 0x13, 0x13, 0xd3, 0xe0, 0xa1, 0x78, 0x30, 0x9e, 0xac, 0x65, 0x42, 0x7a, 0xa0,
	0xad, 0xbb, 0x15, 0xf0, 0x2f, 0xfc, 0x2c, 0x4f, 0x86, 0xa3, 0x47, 0x03, 0x3f, 0x62, 0x76, 0x69,
	0xeb, 0xb6, 0x16, 0xb8, 0x34, 0x7d, 0x99, 0xd9, 0xf7, 0xde, 0xcc, 0xcb, 0x00, 0xf1, 0x9d, 0xb1,
	0x73, 0x2e, 0x3f, 0xd1, 0xcc, 0x0c, 0x59, 0x10, 0x05, 0xa4, 0x21, 0xa0, 0x29, 0x3e, 0xf4, 0x16,
	0xf6, 0xfa, 0x7c, 0x34, 0xc0, 0xe8, 0x1e, 0xa7, 0xbd, 0xe1, 0xd8, 0xf3, 0x89, 0x0e, 0x75, 0x97,
	0xa1, 0x13, 0x05, 0x4c, 0xd7, 0x3a, 0x5a, 0xb7, 0x61, 0x27, 0x90, 0xb4, 0x61, 0xd7, 0x8f, 0xbb,
	0xf4, 0xb2, 0x2c, 0xa5, 0x98, 0xea, 0xd0, 0xca, 0xf2, 0xd8, 0xc8, 0xc3, 0xc0, 0xe7, 0x48, 0x2d,
	0x38, 0x8c, 0x2b, 0xce, 0xd8, 0x19, 0x20, 0x9b, 0x78, 0x2e, 0xde, 0x04, 0x3c, 0xda, 0x20, 0xa4,
	0x43, 0xdd, 0xc7, 0xa9, 0x68, 0x92, 0x3a, 0x55, 0x3b, 0x81, 0xf4, 0x04, 0x8e, 0x0b, 0xc9, 0x52,
	0xb5, 0x07, 0x39, 0x8f, 0x8d, 0x1c, 0xd9, 0x04, 0x45, 0xd3, 0x06, 0x19, 0x02, 0x55, 0xb1, 0x83,
	0x78, 0x16, 0xf9, 0x4f, 0x0e, 0x60, 0x27, 0x64, 0x9e, 0x8b, 0x7a, 0x45, 0x0a, 0xaf, 0x00, 0xbd,
	0x90, 0xd3, 0x29, 0xac, 0x89, 0x1e, 0x69, 0x41, 0x4d, 0xbc, 0xbb, 0x1b, 0x4a, 0xf2, 0xaa, 0x1d,
	0x23, 0xfa, 0x28, 0x7d, 0xf4, 0xdc, 0xd7, 0x37, 0x8f, 0x6d, 0xf3, 0xf1, 0xc7, 0x51, 0x56, 0x39,
	0xd6, 0x78, 0x59, 0x6d, 0x5a, 0x61, 0x4e, 0xbc, 0x5c, 0x7e, 0x95, 0xa1, 0xd2, 0xe7, 0x23, 0x62,
	0x41, 0x53, 0x0d, 0xf4, 0xc8, 0x4c, 0xe3, 0x36, 0xb3, 0x19, 0xb5, 0x4f, 0xd7, 0x96, 0xd2, 0x01,
	0x9f, 0x81, 0x14, 0x64, 0xd7, 0xf9, 0xff, 0x30, 0xdb, 0xd1, 0xee, 0x6e, 0xeb, 0x48, 0x15, 0x2c,
	0x68, 0xaa, 0x79, 0xe5, 0xec, 0x2a, 0xa5, 0xbc, 0xdd, 0xa2, 0x3c, 0x2c, 0x68, 0xaa, 0x4b, 0xcf,
	0x91, 0x29, 0xa5, 0x3c, 0x59, 0xc1, 0x42, 0xaf, 0xcf, 0x3e, 0x17, 0x86, 0x36, 0x5f, 0x18, 0xda,
	0xcf, 0xc2, 0xd0, 0x3e, 0x96, 0x46, 0x69, 0xbe, 0x34, 0x4a, 0xdf, 0x4b, 0xa3, 0xf4, 0xb4, 0x2f,
	0x0f, 0x6a, 0x16, 0xdf, 0xd5, 0x7b, 0x88, 0xfc, 0xa5, 0x26, 0x6f, 0xeb, 0xea, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x24, 0x3d, 0x8a, 0xfb, 0x71, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	SetNewAdmin(ctx context.Context, in *MsgSetNewAdmin, opts ...grpc.CallOption) (*MsgSetNewAdminResponse, error)
	SetNamaServiceCost(ctx context.Context, in *MsgSetNamaServiceCost, opts ...grpc.CallOption) (*MsgSetNamaServiceCostResponse, error)
	ReserveNama(ctx context.Context, in *MsgReserveNama, opts ...grpc.CallOption) (*MsgReserveNamaResponse, error)
	AcquireNama(ctx context.Context, in *MsgAcquireNama, opts ...grpc.CallOption) (*MsgAcquireNamaResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetNewAdmin(ctx context.Context, in *MsgSetNewAdmin, opts ...grpc.CallOption) (*MsgSetNewAdminResponse, error) {
	out := new(MsgSetNewAdminResponse)
	err := c.cc.Invoke(ctx, "/nama.nama.Msg/SetNewAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetNamaServiceCost(ctx context.Context, in *MsgSetNamaServiceCost, opts ...grpc.CallOption) (*MsgSetNamaServiceCostResponse, error) {
	out := new(MsgSetNamaServiceCostResponse)
	err := c.cc.Invoke(ctx, "/nama.nama.Msg/SetNamaServiceCost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ReserveNama(ctx context.Context, in *MsgReserveNama, opts ...grpc.CallOption) (*MsgReserveNamaResponse, error) {
	out := new(MsgReserveNamaResponse)
	err := c.cc.Invoke(ctx, "/nama.nama.Msg/ReserveNama", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AcquireNama(ctx context.Context, in *MsgAcquireNama, opts ...grpc.CallOption) (*MsgAcquireNamaResponse, error) {
	out := new(MsgAcquireNamaResponse)
	err := c.cc.Invoke(ctx, "/nama.nama.Msg/AcquireNama", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	SetNewAdmin(context.Context, *MsgSetNewAdmin) (*MsgSetNewAdminResponse, error)
	SetNamaServiceCost(context.Context, *MsgSetNamaServiceCost) (*MsgSetNamaServiceCostResponse, error)
	ReserveNama(context.Context, *MsgReserveNama) (*MsgReserveNamaResponse, error)
	AcquireNama(context.Context, *MsgAcquireNama) (*MsgAcquireNamaResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SetNewAdmin(ctx context.Context, req *MsgSetNewAdmin) (*MsgSetNewAdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNewAdmin not implemented")
}
func (*UnimplementedMsgServer) SetNamaServiceCost(ctx context.Context, req *MsgSetNamaServiceCost) (*MsgSetNamaServiceCostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNamaServiceCost not implemented")
}
func (*UnimplementedMsgServer) ReserveNama(ctx context.Context, req *MsgReserveNama) (*MsgReserveNamaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReserveNama not implemented")
}
func (*UnimplementedMsgServer) AcquireNama(ctx context.Context, req *MsgAcquireNama) (*MsgAcquireNamaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireNama not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SetNewAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetNewAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetNewAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nama.nama.Msg/SetNewAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetNewAdmin(ctx, req.(*MsgSetNewAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetNamaServiceCost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetNamaServiceCost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetNamaServiceCost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nama.nama.Msg/SetNamaServiceCost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetNamaServiceCost(ctx, req.(*MsgSetNamaServiceCost))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ReserveNama_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReserveNama)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReserveNama(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nama.nama.Msg/ReserveNama",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReserveNama(ctx, req.(*MsgReserveNama))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AcquireNama_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAcquireNama)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AcquireNama(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nama.nama.Msg/AcquireNama",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AcquireNama(ctx, req.(*MsgAcquireNama))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nama.nama.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetNewAdmin",
			Handler:    _Msg_SetNewAdmin_Handler,
		},
		{
			MethodName: "SetNamaServiceCost",
			Handler:    _Msg_SetNamaServiceCost_Handler,
		},
		{
			MethodName: "ReserveNama",
			Handler:    _Msg_ReserveNama_Handler,
		},
		{
			MethodName: "AcquireNama",
			Handler:    _Msg_AcquireNama_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nama/nama/tx.proto",
}

func (m *MsgSetNewAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetNewAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetNewAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewAdmin) > 0 {
		i -= len(m.NewAdmin)
		copy(dAtA[i:], m.NewAdmin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewAdmin)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetNewAdminResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetNewAdminResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetNewAdminResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetNamaServiceCost) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetNamaServiceCost) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetNamaServiceCost) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NewCost != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NewCost))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetNamaServiceCostResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetNamaServiceCostResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetNamaServiceCostResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgReserveNama) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReserveNama) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReserveNama) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Price != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Nama) > 0 {
		i -= len(m.Nama)
		copy(dAtA[i:], m.Nama)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Nama)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReserveNamaResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReserveNamaResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReserveNamaResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NamaId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NamaId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgAcquireNama) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcquireNama) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcquireNama) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Price != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x18
	}
	if m.NamaId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NamaId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAcquireNamaResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcquireNamaResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcquireNamaResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSetNewAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewAdmin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetNewAdminResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetNamaServiceCost) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NewCost != 0 {
		n += 1 + sovTx(uint64(m.NewCost))
	}
	return n
}

func (m *MsgSetNamaServiceCostResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgReserveNama) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Nama)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Price != 0 {
		n += 1 + sovTx(uint64(m.Price))
	}
	return n
}

func (m *MsgReserveNamaResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NamaId != 0 {
		n += 1 + sovTx(uint64(m.NamaId))
	}
	return n
}

func (m *MsgAcquireNama) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NamaId != 0 {
		n += 1 + sovTx(uint64(m.NamaId))
	}
	if m.Price != 0 {
		n += 1 + sovTx(uint64(m.Price))
	}
	return n
}

func (m *MsgAcquireNamaResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSetNewAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetNewAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetNewAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewAdmin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewAdmin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetNewAdminResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetNewAdminResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetNewAdminResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetNamaServiceCost) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetNamaServiceCost: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetNamaServiceCost: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewCost", wireType)
			}
			m.NewCost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NewCost |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetNamaServiceCostResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetNamaServiceCostResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetNamaServiceCostResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReserveNama) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReserveNama: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReserveNama: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nama", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nama = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReserveNamaResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReserveNamaResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReserveNamaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NamaId", wireType)
			}
			m.NamaId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NamaId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcquireNama) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcquireNama: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcquireNama: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NamaId", wireType)
			}
			m.NamaId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NamaId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcquireNamaResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcquireNamaResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcquireNamaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
